name: "Backend CI - placeholder"

on:
  workflow_dispatch:
  push:
    branches:
      - dev
    tags:
      - "v*"
    paths:
      - "src/backend/**"
      - "tests/backend/**"
  pull_request:
    branches:
      - main
      - test
      - dev
    paths:
      - "src/backend/**"
      - "tests/backend/**"
      - ".github/workflows/backend-ci.yml"
    types: [opened, reopened, labeled, synchronize, ready_for_review]

# Sets permissions of the GITHUB_TOKEN to allow creating checks and updating PR
permissions:
  contents: read
  checks: write
  pull-requests: write

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

env:
  DOTNET_VERSION: "7.0.x"
  BACKEND_SOLUTION_PATH: "src/backend"

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.draft == false }}
    defaults:
      run:
        working-directory: ${{ env.BACKEND_SOLUTION_PATH }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # used by GitVersion to find the most recent tag outside of this branch

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - uses: actions/cache@v4
        id: nuget-cache
        with:
          path: ~/.nuget/packages
          key: nuget-${{ hashFiles('**/packages.lock.json') }}

      - name: dotnet restore
        run: dotnet restore --locked-mode

      - name: dotnet build
        run: dotnet build -c Release --no-restore

  deploy:
    # if: contains(github.ref, inputs.repo_name)
    if: ${{ contains(github.ref, 'main') || startsWith(github.ref, 'refs/tags/v') }}
    needs: [build]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.BACKEND_SOLUTION_PATH }}
    # environment: ${{ inputs.deploy_target }}
    environment: "prod"
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # used by GitVersion to find the most recent tag outside of this branch

      - name: Debug output
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo user: ${{ github.event.pull_request.user.login }}
          echo context: "$GITHUB_CONTEXT"

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - uses: actions/cache@v4
        id: nuget-cache
        with:
          path: ~/.nuget/packages
          key: nuget-${{ hashFiles('**/packages.lock.json') }}

      - name: dotnet restore
        run: dotnet restore --locked-mode

      - name: dotnet build
        run: |
          dotnet build -c Release --no-restore

          # To see the version we would have deployed:
          dotnet tool install --global GitVersion.Tool
          dotnet gitversion
