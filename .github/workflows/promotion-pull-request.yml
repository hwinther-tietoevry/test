name: "Create promotion pull request"

on:
  workflow_dispatch:
  push:
    branches:
      - test
      - dev
      - "feature/**"
      - "bugfix/**"

jobs:
  promote-test-to-main:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/test'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: main

      - name: Reset promotion branch
        run: |
          git fetch origin test:test
          git reset --hard test

      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          branch: test
          title: Merging test changes to main
          body: Automatically created pull-request in order to merge changes that were recently pushed to the test branch, back to main
          # assignees: hwinther-tietoevry
          draft: true

      # Not possible if draft: true above
      # - name: Set auto merge on pull request
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      #     PR_URL: ${{ steps.create-pr.outputs.pull-request-url }}
      #   run: gh pr merge --merge --auto $PR_URL

  promote-dev-to-test:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - uses: actions/checkout@v4
        with:
          ref: test

      - name: Reset promotion branch
        run: |
          git fetch origin dev:dev
          git reset --hard dev

      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.WORKFLOW_TOKEN }}
          branch: dev
          title: Merging dev changes to test
          body: Automatically created pull-request in order to merge changes that were recently pushed to the dev branch, back to test
          # assignees: hwinther-tietoevry
          draft: true

      # Not possible if draft: true above
      # - name: Set auto merge on pull request
      #   env:
      #     GH_TOKEN: ${{ github.token }}
      #     PR_URL: ${{ steps.create-pr.outputs.pull-request-url }}
      #   run: gh pr merge --merge --auto $PR_URL

  promote-feature-branch-to-dev:
    runs-on: ubuntu-latest
    if: ${{ contains(github.ref, 'refs/heads/feature/') || contains(github.ref, 'refs/heads/bugfix/') }}
    steps:
      - name: Check if PR exists
        id: check
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
        run: |
          echo "repo: $GITHUB_REPOSITORY"
          echo "github ref: $GITHUB_REF"
          ref=$(echo $GITHUB_REF | sed 's/refs\/heads\///g')
          echo "ref: $ref"

          prs=$(gh pr list \
              --repo "$GITHUB_REPOSITORY" \
              --json baseRefName,headRefName \
              --jq "map(select(.baseRefName == \"dev\" and .headRefName == \"$ref\")) | length")

          echo "prs: $prs"

          if ((prs > 0)); then
              echo "setting skip true"
              echo "skip=true" >> "$GITHUB_OUTPUT"
          else
              echo "setting skip false"
              echo "skip=false" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/checkout@v4
        if: ${{ steps.check.outputs.skip == 'false' }}
        with:
          ref: dev

      - name: Reset promotion branch
        if: ${{ steps.check.outputs.skip == 'false' }}
        run: |
          git fetch origin ${{ github.ref }}:${{ github.ref }}
          git reset --hard ${{ github.ref }}

      # - name: Create Pull Request
      #   if: ${{ steps.check.outputs.skip == 'false' }}
      #   uses: peter-evans/create-pull-request@v5
      #   with:
      #     token: ${{ secrets.WORKFLOW_TOKEN }}
      #     branch: ${{ github.ref }}
      #     title: ${{ github.event.head_commit.message }}
      #     body-path: .github/PULL_REQUEST_TEMPLATE.md
      #     assignees: ${{ github.actor }}
      #     draft: true

      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REF: ${{ github.ref }}
          TITLE: ${{ github.event.head_commit.message }}
        run: |
          PR_URL=$(gh pr create --base dev --head $REF --title '${TITLE}' --body-file .github/PULL_REQUEST_TEMPLATE.md)
          gh pr merge --squash --auto $PR_URL
